<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxFormula_RMA.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAH0AAAA/CAYAAADNEMdCAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQkSURBVHhe7ZqLceM6DEXdSUpJKSklpaSUlJJS8t6xcTU0Vx9aAm1FumeGI1IfhsYFQEi7F2NM
        Et/f37+fn5/X9vHx8fvz8/Mbl8xRQezoXr6+vq7Cx9AckYjqIbo5vr29WfSjQ3qP7rX//v5u0c8Eqb10
        AnNw2M9pMTRHh+hWhLt6PwGIXEa4o30HIEr5Hl2+YmUQ1frQtr6ysV4XgxupRcCg2cJnIOeM9fojz1oU
        NaUBI/3u1qBRG1j0tWA40m/5GiWj3kb7w6J3gBQ6t2didLIB95X9rXt1KxY9mbHIL+F6VX1fjc+5ZxVX
        Fj0ZorUS9Y7S0Bj/FVW0RU+EFD0neA3302K4GhyH7KI2lWWERU8CsUtjLxkeEKu871kiWPQEMKKKMrWp
        CEZoHCQMPtzzSIbYikXfSCHeXZvaq9nztQ3IOeos0QvWyt/Txxmt5Xb1xWQsRD8whmbP4H1ZaWcuzZqd
        QJrLFinTiUwHeN3IFohof8W78KkgWmlRLAzUryc1PDMlDo6gORW5GrcUQD2cyQQIUIhQG3nW8Ag4ldoR
        mGM8PzgUYuraHHNzm41IAI5l1OIICBTDUaa+JJXnJHrlBIvU6wEcgXNLrTWbnJ46suhjwBhOsZiCQ+yH
        U3WL05nt3EUHgs+lV0Xwkpg40xrxYi0PP2caGRNwKnULPXMb3VPPg/AxHLaTJcZEb03vtJG1a76ztXFq
        0VuirH6mBKERl2v0lTEYbxHdJIMwRJIKKFpcmmNUdNUHzIV4zEW/VXDguTXbglkJIs3t52JpC9iCnC+G
        JhsEVsTGcTSCa5QZYpiKskUMX0r8xr/YxpHIililYvpL9IxGskiL4z0DHDC6xwHxaNqH43QTPcRRHRDD
        l3NI0bcgZ4lhChi5V63wKAqIGBqRKVIPJ9pCVpRjH34XjTn3snVtIkMoDLEnwSFL9PJ34dhZ85pkiM6M
        1K5iWdHN0d8gdkpmGi63P/r+BrFTeqVg5s2qgUwiWam9hjl7zGsSoPDKSu0CR1KEZ89tEshO7YhcRrij
        fWcQjdmvjlGtD22tU+E8rI3GHNnrPC09UnsWtbPwFmDhG1gSNDu1Z8G6Eblcf2wTFn0ODDb3/wC4vtfI
        GVt79C36HEQG0TIVzQg+5RAl3MNcul/9Z2cJ/qY/9DSAoaY+g7aIRsRV1fc15cqh4lx3lrKWKcBY/x/+
        KdYYt4oe3WvEvyrSWGvlfGYOIoSIj+EVDPho1DBHPc8acBzWpLa0Dv6mBX8QoqSO0DX7MXOUAtXZowe1
        cz7qqKclDHVnrFbRERrDa5u4nX3OVzbWTZRzVMvINGdiiBgEaxUN51B6ldHVj1u6UDjZXXtVTfEnwViK
        7jWp3fxBiFCKJvoW/SQoXSo9386awxORvtt/YDEdIK27EDoZVNxO7ebgXC7/AeHQjFEGLOIsAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>